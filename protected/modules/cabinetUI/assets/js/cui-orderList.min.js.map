{"version":3,"sources":["../__devel/js/orderList/preinit.js","../__devel/js/orderList/notifications/errors.js","../__devel/js/orderList/apiclient/orderListApi.js","../__devel/js/orderList/storage/OrderListStorage.js","../__devel/js/orderList/view.js","../__devel/js/orderList/controller.js"],"names":["KT","crates","OrderList","mdx","tpl","$","extend","notifications","getOrderListFailed","type","title","msg","killtarget","global","extendApiClient","ApiClient","getOrderList","params","_instance","this","detailsType","getInCurrency","profile","viewCurrency","offset","undefined","rest","caller","data","url","urls","apiClient","factory","storage","OrderListStorage","ktStorage","namespace","orders","totalOrdersAmount","listPaging","setDefaultRequestParams","storedParams","window","sessionStorage","getItem","requestParams","JSON","parse","limit","aggregateOrderData","managers","countries","cities","tourleaders","addMixin","prototype","archived","sortBy","sortDir","getRequestParams","setFilterOption","option","value","setItem","stringify","setFilterOptions","options","setTotalOrdersAmount","amount","dispatch","setOrders","self","splice","length","forEach","order","updateAggregateOrderData","push","updateOrders","hasOrderChanged","hasStatusChanged","newListIDs","oldListIDs","lastTimeStamp","orderId","od","dolc","moment","valueOf","processOrder","i","status","indexOf","oldItemPlace","isNewOrder","movingOrder","appendOrders","aggregateData","mgrLastName","country","city","touristLastName","view","modView","module","mds","config","templateUrl","templates","createOrderModal","orderListItem","orderListItemServices","orderListFilters","filterControlLabel","sortOption","clndr","$createOrder","$searchForm","$sortForm","SearchForm","setSearchForm","$orderListContainer","$spinner","find","$actionsPanel","$showMore","initPreLoader","renderOrderList","orderList","stopPreLoader","item","mapOrderInfo","Mustache","render","appendTo","show","renderOrderCount","orderNum","searchForm","$orderQuan","text","$orderQuanLabel","declOfNum","$searchFormContainer","$sortFormContainer","orderStatuses","getCatalogInfo","orderstatuses","hasOwnProperty","elem","$searchContainer","$inputField","$placeholder","$filters","$sortContainer","$sortOptionsList","$sortFields","enabledFilters","orderNumber","startDate","modificationDate","company","userType","manager","orderStatus","tourleader","offline","archive","controls","controlsKeyMap","sortOptions","html","initSearchFormControls","initSortFormControls","togglePlaceholder","on","toggleForm","startDateFrom","clndrize","template","eventName","startDateTo","modificationDateFrom","modificationDateTo","$country","selectize","openOnFocus","create","createOnBlur","valueField","labelField","$city","$creator","$tourleader","$status","$offline","$target","field","key","getValue","val","getTitle","clear","change","init","ival","dateStart","format","e","clinstance","removeEvents","mival","setEvents","date","setMonth","month","setYear","year","dateEnd","Country","addOption","addItem","City","Manager","Tourleader","Status","Offline","Archived","prop","$clientCompany","plugins","key_down","start","selectOnTab","highlight","loadThrottle","sortField","score","load","query","callback","clearOptions","Dictionary","getAsList","textFilter","fieldsFilter","lang","then","companies","$inputElem","$control","seqid","addClass","setTimeout","removeClass","fail","refreshOptions","onType","str","close","onItemRemove","onChange","trigger","Company","companySuggest","companyId","done","controlName","control","controlKey","renderControlLabel","ctrl","controlValue","clearControlLabel","sortControls","optionName","setSortOption","getControlByKey","updateControlSuggest","suggControl","currval","newOptions","optvalue","updateOption","isApplied","fieldLabel","labelText","$label","children","filter","getFilterValues","filterValues","markLabelsApplied","remove","clearControls","direction","parent","renderOrdersAmount","ordersAmount","toggle","hasClass","css","display","updateSearchFormSuggest","suggestData","clearOrderList","showOrderChanges","$el","animate","height","attr","elHeight","outline","overflow","boxShadow","$icon","pulse","opacity","duration","pulses","showOrderRemoval","console","log","showOrderAdd","position","isNewItem","insertBefore","first","insertAfter","eq","addClasses","showOrderMove","detach","disableMoar","enableMoar","dateAmend","localSum","requestedSum","orderServices","countryCode","presentServices","countryIataCode","String","toLowerCase","Array","isArray","services","service","da","servId","parseInt","serviceType","allServicesDone","servicesList","serviceName","serviceIcon","replace","prices","Number","localNetSum","requestedNetSum","localCommission","requestedCommission","kmpManagerName","managerKMPLastName","managerKMPFirstName","substr","managerKMPMiddleName","creatorName","mgrFirstName","mgrMiddleName","creatorLastName","creatorFirstName","creatorMiddleName","touristName","touristFirstName","ostatus","isArchived","datetimeFormat","datetimeOutFormat","orderStatusIcon","orderStatusText","htmlDecode","touristCount","touristsCount","startdate","endDate","enddate","toMoney","requestedCurrency","KmpManagerName","clientCompany","agentCompany","creator","vip","manualMode","renderCreateOrderModal","actions","modal","Modal","notify","buttons","$company","$container","$contract","jirafize","completely","name","onItemAdd","contractControl","contracts","Contracts","map","contract","ContractID","ContractID_UTK","ContractDate","ContractExpiry","expired","enable","disable","on_blur","$content","controller","crate","olController","lastChangeDate","countryName","beaconId","regenerateOrdersStorage","clearTimeout","response","body","nums","ordersContainer","pollOrderList","currentBeacon","err","error","$modal","location","assign","closeModal","stopPropagation","preventDefault","filterOptions","closest","getTemplates"],"mappings":"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","file":"cui-orderList.min.js","sourcesContent":["KT.crates.OrderList = {};\n\nKT.mdx.OrderList = {};\nKT.mdx.OrderList.tpl = {};\n","$.extend(KT.notifications,{\n  'getOrderListFailed': {\n    type:'error',\n    title:'Не удалось загрузить список',\n    msg:'Попробуйте перезагрузить страницу',\n    killtarget: 'body'\n  }\n});","(function(global, extendApiClient) {\n\n    extendApiClient(KT.apiClient);\n\n}(this,function(ApiClient) {\n\n  /**\n  * Получение списка заявок\n  * @param {Object} params - параметры команды\n  */\n  ApiClient.getOrderList = function(params) {\n    var _instance = this;\n\n    params.detailsType = 'long';\n    params.getInCurrency = KT.profile.viewCurrency;\n    \n    if (params.offset === undefined) {\n      params.offset = 0;\n    }\n    \n    return KT.rest({\n        caller:\"orderList - getOrderList\",\n        data: params,\n        url: _instance.urls.getOrderList\n      });\n  };\n\n\n}));","/* global KT */\n/* global ktStorage */\n\n(function(global,factory){\n\n    KT.storage.OrderListStorage = factory();\n\n}(this,function() {\n  /**\n  * Прототип хранилища данных заявки\n  * @module OrderStorage\n  * @constructor\n  * @param {Integer} orderId - ID заявки\n  */\n  var OrderListStorage = ktStorage.extend(function() {\n    this.namespace = 'OrderListStorage';\n\n    this.orders = [];\n    this.totalOrdersAmount = 0;\n\n    // количество заявок для вывода *на одной странице*\n    this.listPaging = 20;\n\n    this.setDefaultRequestParams();\n\n    var storedParams = window.sessionStorage.getItem('OrderListRequestParams');\n    if (storedParams !== null && storedParams !== '') {\n      $.extend(true, this.requestParams, JSON.parse(storedParams));\n      this.requestParams.limit = this.listPaging;\n    }\n\n    // агрегированные данные заявок для фильтрации\n    this.aggregateOrderData = {\n      'managers': {},\n      'countries': {},\n      'cities': {},\n      'tourleaders': {}\n    };\n\n  });\n\n  KT.addMixin(OrderListStorage, 'Dispatcher');\n\n  /**\n  * Установка значений по умолчанию для запроса заявок\n  * @return {Object} параметры по умолчанию \n  */\n  OrderListStorage.prototype.setDefaultRequestParams = function() {\n    this.requestParams = {\n      'limit': this.listPaging,\n      'archived': false,\n      'sortBy': ['lastChangeDate'],\n      'sortDir': 'desc'\n    };\n\n    return this.getRequestParams();\n  };\n\n  /** \n  * Возвращает копию параметров запроса списка заявок \n  * @return {Object} - параметры запроса\n  */\n  OrderListStorage.prototype.getRequestParams = function() {\n    return $.extend(true, {}, this.requestParams);\n  };\n\n  /**\n  * Установка поля фильтрации для запроса списка\n  * @param {String} option - название опции\n  * @param {*} value - значение опции\n  */\n  OrderListStorage.prototype.setFilterOption = function(option, value) {\n    this.requestParams[option] = value;\n    this.requestParams.limit = this.listPaging;\n    window.sessionStorage.setItem('OrderListRequestParams', JSON.stringify(this.requestParams));\n\n    return this;\n  };\n\n  /**\n  * Установка нескольких полей фильтрации для запроса списка\n  * @param {Object} options - список полей со значениями\n  */\n  OrderListStorage.prototype.setFilterOptions = function(options) {\n    $.extend(true, this.requestParams, options);\n    this.requestParams.limit = this.listPaging;\n    window.sessionStorage.setItem('OrderListRequestParams', JSON.stringify(this.requestParams));\n  };\n\n  /**\n  * Сохранение количества всех найденных заявок по заданным фильтрам\n  * @param {Number} amount - количество заявок\n  */\n  OrderListStorage.prototype.setTotalOrdersAmount = function(amount) {\n    this.totalOrdersAmount = amount;\n    this.dispatch('changedTotalOrdersAmount', amount);\n  };\n\n  /**\n  * Задает список заявок (стирая старые)\n  * @param {Array} orders - заявки\n  */\n  OrderListStorage.prototype.setOrders = function(orders) {\n    var self = this;\n\n    self.orders.splice(0, self.orders.length);\n\n    orders.forEach(function(order) {\n      self.updateAggregateOrderData(order);\n      self.orders.push(order);\n    });\n\n    self.dispatch('setOrders', {'orders': self.orders});\n  };\n\n  /**\n  * Обновление сохраненного списка заявок\n  * @param {Array} orders - заявки\n  */\n  OrderListStorage.prototype.updateOrders = function(orders) {\n    var self = this;\n    \n    var newListIDs = [];\n    var oldListIDs = [];\n    var lastTimeStamp = 0;\n    var hasOrderChanged;\n    var hasStatusChanged;\n\n    orders.forEach(function(order) { newListIDs.push(order.orderId); });\n    self.orders.forEach(function(order) {\n      oldListIDs.push(order.orderId);\n      var od = (order.dolc !== null) ? moment(order.dolc, 'YYYY-MM-DD HH:mm:ss').valueOf() : od;\n      lastTimeStamp = (lastTimeStamp < od) ? od : lastTimeStamp;\n    });\n\n    var processOrder = function(order, i) {\n      if (self.orders[i] !== undefined && self.orders[i].orderId === order.orderId) {\n        // тот же ID \n        if (self.orders[i].dolc !== order.dolc) {\n          hasStatusChanged = (self.orders[i].status !== order.status);\n          self.orders.splice(i, 1, order);\n          self.dispatch('orderChanged', [order, hasStatusChanged]);\n        }\n      } else {\n        // другой ID или старый список кончился\n        if (self.orders[i] !== undefined && newListIDs.indexOf(self.orders[i].orderId) === -1) {\n          // заявки нет в новом списке\n          oldListIDs.splice(i,1);\n          self.dispatch('orderRemoved', self.orders.splice(i, 1)[0].orderId);\n          processOrder(order, i);\n        } else {\n          var oldItemPlace = oldListIDs.indexOf(order.orderId);\n\n          if (oldItemPlace === -1) {\n            // новой заявки нет в старом списке\n            self.orders.splice(i, 0, order);\n            oldListIDs.splice(i, 0, order.orderId);\n\n            var isNewOrder = (moment(order.dolc,'YYYY-MM-DD HH:mm:ss').valueOf() > lastTimeStamp);\n\n            self.dispatch('orderAdded', [order, i, isNewOrder]);\n          } else {\n            // новая заявка есть в старом списке\n            var movingOrder = self.orders.splice(oldItemPlace, 1)[0];\n            oldListIDs.splice(oldItemPlace, 1);\n            \n            self.orders.splice(i, 0, order);\n            oldListIDs.splice(i, 0, order.orderId);\n\n            hasOrderChanged = (movingOrder.dolc !== order.dolc);\n            hasStatusChanged = (movingOrder.status !== order.status);\n\n            self.dispatch('orderReordered', [order, i, hasOrderChanged, hasStatusChanged]);\n          }\n        }\n      }\n    };\n\n    orders.forEach(processOrder);\n\n    var i = orders.length;\n    while (i < self.orders.length) {\n      self.dispatch('orderRemoved', self.orders.splice(i, 1)[0].orderId);\n    }\n\n    self.dispatch('ordersUpdated');\n  };\n\n  /**\n  * Добавление новых заявок к списку \n  * @param {Array} orders - заявки\n  */\n  OrderListStorage.prototype.appendOrders = function(orders) {\n    var self = this;\n\n    self.requestParams.limit += self.listPaging;\n\n    orders.forEach(function(order) {\n      self.updateAggregateOrderData(order);\n      self.orders.push(order);\n    });\n\n    self.dispatch('setOrders', {'orders': orders});\n  };\n\n  /**\n  * Сбор данных из заявки\n  * @param {Object} order - заявка\n  */\n  OrderListStorage.prototype.updateAggregateOrderData = function(order) {\n    var aggregateData = this.aggregateOrderData;\n\n    if (order.mgrLastName !== undefined && order.mgrLastName !== null) {\n      aggregateData.managers[order.mgrLastName] = order.mgrLastName;\n    }\n\n    if (order.country !== undefined && order.country !== null) {\n      aggregateData.countries[order.country] = order.country;\n    }\n\n    if (order.city !== undefined && order.city !== null) {\n      aggregateData.cities[order.city] = order.city;\n    }\n\n    if (order.touristLastName !== undefined && order.touristLastName !== null) {\n      aggregateData.tourleaders[order.touristLastName] = order.touristLastName;\n    }\n  };\n\n  return OrderListStorage;\n}));\n","(function(global,factory) {\n\n    KT.crates.OrderList.view = factory();\n\n}(this, function() {\n  /**\n  * Список заявок: представление\n  * @constructor\n  * @param {Object} module - хранилище родительского модуля\n  * @param {Object} [options] - Объект конфигурации\n  */\n  var modView = function(module, options) {\n    this.mds = module;    \n    if (options === undefined) { options = {}; }\n    this.config = $.extend(true,{\n      'templateUrl': '/cabinetUI/orders/getTemplates',\n      'templates': {\n        createOrderModal: 'orderList/modals/createOrder',\n        orderListItem: 'orderList/listItem',\n        orderListItemServices: 'orderList/itemServices',\n        orderListFilters: 'orderList/filterControls',\n        filterControlLabel: 'orderList/filterControlLabel',\n        sortOption: 'orderList/sortOption',\n        clndr: 'clndrTemplate'\n      }\n    },options);\n\n    this.$createOrder = $('.js-orl--add-new-order');\n\n    this.$searchForm = $('#order-list-filter');\n    this.$sortForm = $('#order-list-sorting');\n\n    this.SearchForm = this.setSearchForm(this.$searchForm, this.$sortForm);\n\n    this.$orderListContainer = $('#order-list-items');\n    this.$spinner = this.$orderListContainer.find('.spinner');\n\n    this.$actionsPanel = $('#order-list-actions');\n    this.$showMore = this.$actionsPanel.find('.js-orl-list-actions--show-more');\n\n    this.initPreLoader();\n  };\n\n  /**\n  * Отображение списка заявок\n  * @param {Array} orderList - Массив заявок\n  */\n  modView.prototype.renderOrderList = function(orderList) {\n    this.stopPreLoader();\n    var _instance = this;\n\n    orderList.forEach(function(item) {\n      var order = _instance.mapOrderInfo(item);\n      $(Mustache.render(_instance.mds.tpl.orderListItem, order))\n        .appendTo(_instance.$orderListContainer)\n        .show();\n    });\n\n    return this;\n  };\n\n  /**\n  * Метод: Отображение количества заявок\n  * @param {Number} orderNum - Число заявок\n  */\n  modView.prototype.renderOrderCount = function(orderNum) {\n    this.searchForm.$orderQuan.text(orderNum);\n    this.searchForm.$orderQuanLabel.text(\n      declOfNum(orderNum,['найденная заявка','найденные заявки','найденных заявок'])\n    );\n\n    return this;\n  };\n\n  /**\n  * Инициализация формы поиска и фильтрации заявок\n  * @param {Object} $searchFormContainer - контейнер формы поиска\n  * @param {Object} $sortFormContainer - контейнер формы сортировки\n  * @return {Object} объект управления формой поиска \n  */\n  modView.prototype.setSearchForm = function($searchFormContainer, $sortFormContainer) {\n    var _instance = this;\n\n    // подготовка списка статусов заявки\n    var orderStatuses = [];\n    for (var status in KT.getCatalogInfo.orderstatuses) {\n      if (KT.getCatalogInfo.orderstatuses.hasOwnProperty(status)) {\n        orderStatuses.push({value: status, text: KT.getCatalogInfo.orderstatuses[status][1]});\n      }\n    }\n\n    var SearchForm = {\n      elem: {\n        $searchContainer: $searchFormContainer,\n        $inputField: $searchFormContainer.find('.js-orl-filter-statusbar'),\n        $placeholder: $searchFormContainer.find('.js-orl-filter-statusbar--placeholder'),\n        $filters: $searchFormContainer.find('.js-orl-filter--selectors'),\n        $sortContainer: $sortFormContainer,\n        $orderQuan: $sortFormContainer.find('.js-orl-sorting--amount'),\n        $orderQuanLabel: $sortFormContainer.find('.js-orl-sorting--amount-label'),\n        $sortOptionsList: $sortFormContainer.find('.js-orl-sorting--actions'),\n        $sortFields: null\n      },\n      enabledFilters: {\n        'orderNumber': true,\n        'startDate': true,\n        'country': true,\n        'city': true,\n        'modificationDate': true,\n        'company': (KT.profile.userType === 'op') ? true : false,\n        'manager': true,\n        'orderStatus': true,\n        'tourleader': true,\n        'offline': true,\n        'archive': true\n      },\n      controls: {},\n      controlsKeyMap: {},\n      /**\n      * Рендер формы поиска\n      * @param {Object} requestParams - стартовые параметры запроса\n      * @param {Object} sortOptions - стартовые параметры сортировки\n      */\n      render: function(requestParams, sortOptions) {\n        var self = this;\n\n        this.elem.$filters.html(Mustache.render(_instance.mds.tpl.orderListFilters, this.enabledFilters));\n        this.initSearchFormControls(requestParams);\n        this.initSortFormControls(requestParams, sortOptions);\n\n        this.togglePlaceholder();\n        this.elem.$inputField.on('click', function() {\n          self.toggleForm();\n        });\n      },\n      /**\n      * Инициализация контролов формы поиска\n      * @param {Object} requestParams - стартовые параметры запроса\n      */\n      initSearchFormControls: function(requestParams) {\n        var startDateFrom = $('#orl-filter--start-date-from').clndrize({\n          'template': _instance.mds.tpl.clndr,\n          'eventName': 'Дата заезда - с'\n        });\n\n        var startDateTo = $('#orl-filter--start-date-to').clndrize({\n          'template': _instance.mds.tpl.clndr,\n          'eventName': 'Дата заезда - по'\n        });\n\n        var modificationDateFrom = $('#orl-filter--modification-date-from').clndrize({\n          'template': _instance.mds.tpl.clndr,\n          'eventName': 'Дата модификации - с'\n        });\n\n        var modificationDateTo = $('#orl-filter--modification-date-to').clndrize({\n          'template': _instance.mds.tpl.clndr,\n          'eventName': 'Дата модификации - по'\n        });\n\n        var $country = $('#orl-filter--country').selectize({\n            openOnFocus: true,\n            create: true,\n            createOnBlur: true,\n            valueField: 'value',\n            labelField: 'text'\n        });\n\n        var $city = $('#orl-filter--city').selectize({\n            openOnFocus: true,\n            create: true,\n            createOnBlur: true,\n            valueField: 'value',\n            labelField: 'text',\n        });\n\n        var $creator = $('#orl-filter--creator').selectize({\n            openOnFocus: true,\n            create: true,\n            createOnBlur: true,\n            valueField: 'value',\n            labelField: 'text',\n        });\n\n        var $tourleader = $('#orl-filter--tourleader').selectize({\n            openOnFocus: true,\n            create: true,\n            createOnBlur: true,\n            valueField: 'value',\n            labelField: 'text',\n        });\n\n        var $status = $('#orl-filter--status').selectize({\n            openOnFocus: true,\n            create: false,\n            options: orderStatuses\n        });\n\n        var $offline = $('#orl-filter--offline').selectize({\n            openOnFocus: true,\n            create: false,\n            options: [\n              {value:0, text:'онлайн'},\n              {value:1, text:'оффлайн'}\n            ]\n        });\n        \n        this.controls.orderId = {\n          $target: $('#orl-filter--orderid'),\n          field: '№ заявки:',\n          key: 'orderId',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return this.$target.val(); },\n          clear: function() { this.$target.val('').change(); },\n          init: function(ival) { this.$target.val(ival); }\n        };\n\n        this.controls.dateStart = {\n          $target: $('#orl-filter--start-date-from'),\n          field: 'заезд с:',\n          key: 'startDate',\n          getValue: function() {\n            if (this.$target.val() !== '') {\n              try {\n                return moment(this.$target.val(),'DD.MM.YYYY').format('YYYY-MM-DD');\n              } catch(e) { return ''; }\n            } else {\n              return '';\n            }\n          },\n          getTitle: function() {\n            try {\n              return this.$target.val();\n            } catch(e) { return ''; }\n          },\n          clear: function() {\n            startDateFrom.clinstance.removeEvents(function() { return true; });\n            this.$target.val('').change();\n          },\n          init: function(ival) {\n            var mival = moment(ival,'YYYY-MM-DD');\n            this.$target.val(mival.format('DD.MM.YYYY'));\n            startDateFrom.clinstance.setEvents([{date:ival,title:'Дата заезда'}]);\n            startDateFrom.clinstance.setMonth(mival.month());\n            startDateFrom.clinstance.setYear(mival.year());\n          }\n        };\n\n        this.controls.dateEnd = {\n          $target: $('#orl-filter--start-date-to'),\n          field: 'заезд по:',\n          key: 'finishDate',\n          getValue: function() {\n            if (this.$target.val() !== '') {\n              try { return moment(this.$target.val(),'DD.MM.YYYY').format('YYYY-MM-DD'); }\n              catch(e) { return ''; }\n            } else {\n              return '';\n            }\n          },\n          getTitle: function() {\n            try { return this.$target.val(); }\n            catch(e) { return ''; }\n          },\n          clear: function() {\n            startDateTo.clinstance.removeEvents(function() { return true; });\n            this.$target.val('').change();\n          },\n          init: function(ival) {\n            var mival = moment(ival,'YYYY-MM-DD');\n            this.$target.val(moment(ival,'YYYY-MM-DD').format('DD.MM.YYYY'));\n            startDateTo.clinstance.setEvents([{date:ival, title:'Дата заезда'}]);\n            startDateTo.clinstance.setMonth(mival.month());\n            startDateTo.clinstance.setYear(mival.year());\n          }\n        };\n\n        this.controls.modificationDateFrom = {\n          $target: $('#orl-filter--modification-date-from'),\n          field: 'изменены после:',\n          key: 'modificationDateFrom',\n          getValue: function() {\n            if (this.$target.val() !== '') {\n              try {\n                return moment(this.$target.val(),'DD.MM.YYYY').format('YYYY-MM-DD');\n              } catch(e) { return ''; }\n            } else {\n              return '';\n            }\n          },\n          getTitle: function() {\n            try {\n              return this.$target.val();\n            } catch(e) { return ''; }\n          },\n          clear: function() {\n            modificationDateFrom.clinstance.removeEvents(function() { return true; });\n            this.$target.val('').change();\n          },\n          init: function(ival) {\n            var mival = moment(ival,'YYYY-MM-DD');\n            this.$target.val(mival.format('DD.MM.YYYY'));\n            modificationDateFrom.clinstance.setEvents([{date:ival,title:'Дата модификации'}]);\n            modificationDateFrom.clinstance.setMonth(mival.month());\n            modificationDateFrom.clinstance.setYear(mival.year());\n          }\n        };\n\n        this.controls.modificationDateTo = {\n          $target: $('#orl-filter--modification-date-to'),\n          field: 'изменены до:',\n          key: 'modificationDateTo',\n          getValue: function() {\n            if (this.$target.val() !== '') {\n              try {\n                return moment(this.$target.val(),'DD.MM.YYYY').format('YYYY-MM-DD');\n              } catch(e) { return ''; }\n            } else {\n              return '';\n            }\n          },\n          getTitle: function() {\n            try {\n              return this.$target.val();\n            } catch(e) { return ''; }\n          },\n          clear: function() {\n            modificationDateTo.clinstance.removeEvents(function() { return true; });\n            this.$target.val('').change();\n          },\n          init: function(ival) {\n            var mival = moment(ival,'YYYY-MM-DD');\n            this.$target.val(mival.format('DD.MM.YYYY'));\n            modificationDateTo.clinstance.setEvents([{date:ival,title:'Дата модификации'}]);\n            modificationDateTo.clinstance.setMonth(mival.month());\n            modificationDateTo.clinstance.setYear(mival.year());\n          }\n        };\n\n        this.controls.Country = {\n          $target: $country,\n          field: 'страна:',\n          key: 'countryName',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return this.$target[0].selectize.options[this.$target.val()].text; },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addOption({'value':ival, 'text':ival});\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.City = {\n          $target: $city,\n          field: 'город:',\n          key: 'cityName',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return this.$target[0].selectize.options[this.$target.val()].text; },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addOption({'value':ival, 'text':ival});\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.Manager = {\n          $target: $creator,\n          field: 'менеджер:',\n          key: 'managerName',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return this.$target[0].selectize.options[this.$target.val()].text; },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addOption({'value':ival, 'text':ival});\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.Tourleader = {\n          $target: $tourleader,\n          field: 'турлидер:',\n          key: 'touristName',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return this.$target[0].selectize.options[this.$target.val()].text; },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addOption({'value':ival, 'text':ival});\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.Status = {\n          $target: $status,\n          field: 'статус:',\n          key: 'orderStatus',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return $(this.$target[0].selectize.getItem(this.$target.val())).text(); },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addOption({value:ival, text:KT.getCatalogInfo.orderstatuses[ival][1]});\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.Offline = {\n          $target: $offline,\n          field: 'тип заявки:',\n          key: 'offline',\n          getValue: function() { return this.$target.val(); },\n          getTitle: function() { return $(this.$target[0].selectize.getItem(this.$target.val())).text(); },\n          clear: function() { this.$target[0].selectize.clear(); },\n          init: function(ival) {\n            this.$target[0].selectize.addItem(ival);\n          }\n        };\n\n        this.controls.Archived = {\n          $target: $('#orl-filter--archived'),\n          field: 'архивные',\n          key: 'archived',\n          getValue: function() { return this.$target.prop('checked'); },\n          getTitle: function() { return this.$target.prop('checked'); },\n          clear: function() { this.$target.prop('checked',false).change(); },\n          init: function(ival) { this.$target.prop('checked',ival); }\n        };\n\n        if (this.enabledFilters.company) {\n          var $clientCompany = $('#orl-filter--company').selectize({\n            plugins: {'key_down': { start: 2 }},\n            openOnFocus: true,\n            create: false,\n            selectOnTab: true,\n            highlight: false,\n            loadThrottle: 300,\n            valueField: 'companyId',\n            labelField: 'name',\n            sortField:'seqid',\n            options:[],\n            score:function() {\n              return function(item) {\n                return 1000 / (item.seqid);\n              };\n            },\n            load: function(query, callback) {\n              var self = this;\n\n              this.clearOptions();\n\n              if (!query.length || query.length < 2) {\n                return callback();\n              }\n\n              KT.Dictionary.getAsList('companies', {\n                  'textFilter': query,\n                  'fieldsFilter': [],\n                  'lang': 'ru'\n                })\n                .then(function(companies) {\n                  var $inputElem = self.$control;\n\n                  companies.forEach(function(item, i) {\n                    item.seqid = i + 1;\n                  });\n                  callback(companies);\n\n                  if (companies.length === 0) {\n                    $inputElem.addClass('warning');\n                    setTimeout(function() {\n                      $inputElem.removeClass('warning');\n                    }, 2000);\n                  }\n                })\n                .fail(function() {\n                  callback();\n                  self.refreshOptions(true);\n                  var $inputElem = self.$control;\n                  $inputElem.addClass('warning');\n                  setTimeout(function() {\n                    $inputElem.removeClass('warning');\n                  }, 2000);\n                });\n            },\n            onType:function(str) {\n              if (str.length < 2) {\n                this.close();\n                this.clearOptions();\n              }\n            },\n            onItemRemove: function() {\n              this.clearOptions();\n            },\n            onChange: function(val) {\n              if (val === '') {\n                this.trigger('item_remove');\n              }\n            }\n          });\n\n          this.controls.Company = {\n            $target: $clientCompany,\n            field: 'компания:',\n            key: 'clientId',\n            getValue: function() { return this.$target.val(); },\n            getTitle: function() {\n              var title = $(this.$target[0].selectize.getItem(this.$target.val())).text();\n              return (title !== '') ? title : '...';\n            },\n            clear: function() { this.$target[0].selectize.clear(); },\n            init: function(ival) {\n              var self = this;\n              var companySuggest = this.$target[0].selectize;\n\n              KT.Dictionary.getAsList('companies', {\n                  'companyId': ival,\n                  'fieldsFilter': [],\n                  'lang': 'ru'\n                })\n                .done(function(companies) {\n                  if (companies.length !== 0) {\n                    companySuggest.addOption(companies[0]);\n                    companySuggest.addItem(companies[0].companyId);\n                  } else {\n                    self.clear();\n                  }\n                })\n                .fail(function() {\n                  self.clear();\n                });\n            }\n          };\n        }\n\n        var self = this;\n\n        //установка стартовых значений, если есть, и привязка событий\n        for (var controlName in this.controls) {\n          var control = this.controls[controlName];\n          var controlKey = control.key;\n\n          self.controlsKeyMap[controlKey] = control;\n\n          if (\n            requestParams[controlKey] !== undefined &&\n            requestParams[controlKey] !== null &&\n            requestParams[controlKey] !== false &&\n            requestParams[controlKey] !== ''\n          ) {\n            control.init(requestParams[controlKey]);\n            self.renderControlLabel(control, true);\n          }\n          \n          control.$target.on('change', {ctrl:control}, function(e) {\n            var ctrl = e.data.ctrl;\n            var controlValue = ctrl.getValue();\n\n            if (\n              controlValue !== '' && \n              controlValue !== null &&\n              controlValue !== false &&\n              controlValue !== []\n            ) {\n              self.renderControlLabel(ctrl);\n            } else {\n              self.clearControlLabel(ctrl.key);\n            }\n\n            self.togglePlaceholder();\n          });\n        }\n      },\n      /**\n      * Инициализация контролов формы сортировки\n      * @param {Object} requestParams - стартовые параметры запроса\n      */\n      initSortFormControls: function(requestParams, sortOptions) {\n        var sortControls = '';\n        for (var option in sortOptions) {\n          if(sortOptions.hasOwnProperty(option)) {\n            sortControls += Mustache.render(_instance.mds.tpl.sortOption, {\n              'sortOption': option,\n              'optionName': sortOptions[option][1]\n            });\n          }\n        }\n        this.elem.$sortOptionsList.html(sortControls);\n        this.elem.$sortFields = this.elem.$sortOptionsList.find('input[name=\"orderField\"]');\n        this.setSortOption(requestParams.sortBy[0], requestParams.sortDir);\n      },\n      /** \n      * Возвращает контро по его ключу \n      * @param {string} controlKey - ключ контрола\n      * @return {Object} контрол\n      */\n      getControlByKey: function(controlKey) {\n        return this.controlsKeyMap[controlKey];\n      },\n      /**\n      * Изменение подсказок для полей страны и менеджера\n      * @param {Array} options - массив значений для подсказки\n      * @param {Object} control - Объект контрола для подсказки (из this.controls)\n      */\n      updateControlSuggest: function(options, control) {\n        var suggControl = control.$target[0].selectize;\n        var currval = suggControl.getValue();\n        //var currtext=$(suggControl.getItem(suggControl.getValue())).text();\n\n        //suggControl.clearOptions();\n        //options.unshift();\n        var newOptions = [];\n\n        for (var optvalue in options) {\n          if (options.hasOwnProperty(optvalue)) {\n            newOptions.push({'value':optvalue, 'text':options[optvalue]});\n          }\n        }\n\n        suggControl.addOption(newOptions);\n\n        if (currval !== '') {\n          if (options[currval] === undefined) {\n            suggControl.updateOption(currval, {'value':currval, 'text':currval});\n          }\n          suggControl.addItem(currval, true);\n        } else { suggControl.clear(true); }\n\n        return this;\n      },\n      /**\n      * Рендер метки контрола в поле поиска \n      * @param {Object} control - элемент управления\n      * @param {Boolean} [isApplied] - применено ли значение к \n      */\n      renderControlLabel: function (control, isApplied) {\n        var fieldLabel = control.field;\n        var value = control.getTitle();\n        var key = control.key;\n\n        var labelText = (fieldLabel.indexOf(':') === -1) ? fieldLabel : fieldLabel+' '+value;\n        var $label = this.elem.$inputField.children('.js-orl-filter--control-label').filter('[data-key=\"'+key+'\"]');\n\n        if ($label.length > 0) {\n          $label.text(labelText);\n        } else {\n          $(Mustache.render(_instance.mds.tpl.filterControlLabel, {\n            'key': key,\n            'text': labelText,\n            'isApplied': (isApplied === true) ? true : false\n          })).appendTo(this.elem.$inputField);\n        }\n\n        return this;\n      },\n      /**\n      * Возвращает выбранные значения фильтрации\n      * @return {Object} - выбранные значения фильтров\n      */\n      getFilterValues: function() {\n        var filterValues = {};\n\n        for (var controlName in this.controls) {\n          var control = this.controls[controlName];\n          var controlValue = control.getValue();\n\n          if (controlValue === '' || controlValue === []) {\n            controlValue = null;\n          }\n\n          filterValues[control.key] = controlValue;\n        }\n\n        return filterValues;\n      },\n      /** Отмечает все метки как примененные для фильтрации */\n      markLabelsApplied: function() {\n        this.elem.$inputField.children('.js-orl-filter--control-label').addClass('is-applied');\n      },\n      /** \n      * Удаление метки контрола в поле поиска \n      * @param {String} controlKey - ключ контрола\n      */\n      clearControlLabel: function(controlKey) {\n        this.elem.$inputField.children('div[data-key=\"' + controlKey + '\"]').remove();\n      },\n      /** Очистка значений контролов */\n      clearControls: function() {\n        for (var control in this.controls) {\n          this.controls[control].clear();\n        }\n      },\n      /**\n      * Установка опции сортировки\n      * @param {String} option - ключ опции сортировки\n      * @param {String} direction - направление сортировки\n      */\n      setSortOption: function(option, direction) {\n        this.elem.$sortFields.prop('checked',false).parent().removeClass('sort-asc sort-desc checked');\n        this.elem.$sortFields.filter('[value=\"' + option + '\"]').parent().addClass('checked sort-' + direction);\n      },\n      /**\n      * Рендер колтчества найденных заявок\n      * @param {Number} ordersAmount - количество заявок \n      */\n      renderOrdersAmount: function(ordersAmount) {\n        this.elem.$orderQuan.text(ordersAmount);\n        this.elem.$orderQuanLabel.text(\n          declOfNum(ordersAmount, ['найденная заявка','найденные заявки','найденных заявок'])\n        );\n      },\n      /** \n      * Управление состоянием формы поиска (свернута/развернута) \n      * @param {String} [toggle] - заданное состояние\n      */\n      toggleForm: function(toggle) {\n        if (toggle !== undefined) {\n          if (toggle === 'show') {\n            this.elem.$searchContainer.addClass('focus');\n          } else {\n            this.elem.$searchContainer.removeClass('focus');\n          }\n        } else {\n          if (this.elem.$searchContainer.hasClass('focus')) {\n            this.elem.$searchContainer.removeClass('focus');\n          } else {\n            this.elem.$searchContainer.addClass('focus');\n          }\n        }\n      },\n      /** Управление плейсхолдером формы поиска */\n      togglePlaceholder: function() {\n        if (this.elem.$inputField.children('.orl-filter-statusbar__item').length > 0) {\n          this.elem.$placeholder.css({'display':'none'});\n        } else {\n          this.elem.$placeholder.css({'display':'inline-block'});\n        }\n      }\n    };\n\n    return SearchForm;\n  };\n\n  /** \n  * Обновление вариантов для выбора полей фильтра \n  * @param {Object} suggestData - данные саджеста\n  */\n  modView.prototype.updateSearchFormSuggest = function(suggestData) {\n    this.SearchForm\n      .updateControlSuggest(suggestData.managers, this.SearchForm.controls.Manager)\n      .updateControlSuggest(suggestData.tourleaders, this.SearchForm.controls.Tourleader)\n      .updateControlSuggest(suggestData.countries, this.SearchForm.controls.Country)\n      .updateControlSuggest(suggestData.cities, this.SearchForm.controls.City);\n  };\n\n  /**\n  * Очистка списка заявок\n  */\n  modView.prototype.clearOrderList = function() {\n    this.$orderListContainer.children('.js-orl-list-item').remove();\n    this.initPreLoader();\n    return this;\n  };\n\n  /**\n  * Отображение изменений заявки\n  * @param {Object} order - Новые данные заявки\n  * @param {Boolean} hasStatusChanged - изменился ли статус заявки\n  */\n  modView.prototype.showOrderChanges = function(order, hasStatusChanged) {\n    var $el = $(Mustache.render(this.mds.tpl.orderListItem, this.mapOrderInfo(order)));\n    var elHeight = 73;\n\n    this.$orderListContainer.find('.js-orl-list-item')\n      .filter('[data-id=\"' + order.orderId + '\"]')\n        .animate({'height': '1px'}, 500, 'linear', function() {\n          $(this)\n            .html($el.html())\n            .attr('data-id', order.orderId)\n            .addClass('orderChanged');\n        })\n        .animate({'height': elHeight + 'px'}, 1000, 'swing', function() {\n          $el = $(this);\n\n          $el.css({'outline':'2px solid #fde93e','overflow':'visible'})\n            .animate({\n              boxShadow: '0 0 20px rgba(253,233,62,0.7),0 0 10px rgba(253,233,62,0.7),0 0 5px rgba(253,233,62,0.7)'\n            }, 1000, 'overBounce');\n            \n          var $icon = $el.find('.js-orl-list-item--status-icon');\n\n          if (hasStatusChanged === 1) {\n            $icon.parent().find('.js-orl-list-item--status-bg')\n              .pulse({'opacity': '1'}, {duration: 700, pulses: 4});\n          }\n\n          setTimeout(function(){\n            $el.css({'outline': '0px solid #fde93e'})\n              .animate({\n                boxShadow: '0 0 0px rgba(253,233,62,0.7),0 0 0px rgba(253,233,62,0.7)'\n              }, 100, 'linear');\n          }, 5000);\n        });\n  };\n\n  /**\n  * Отображение удаления элемента списка\n  * @param {Number} orderId - Id заявки\n  */\n  modView.prototype.showOrderRemoval = function(orderId) {\n    console.log('removing: ' + orderId);\n    this.$orderListContainer.find('.js-orl-list-item')\n      .filter('[data-id=\"' + orderId + '\"]')\n       .animate({'height':'1px'}, 500, 'swing', function(){ $(this).remove(); });\n  };\n\n  /**\n  * Добавление элемента списка\n  * @param {Object} order - новые данные заявки\n  * @param {Number} position - позиция для вставки\n  * @param {Boolean} isNewItem - признак нового элемента\n  *\n  * @todo potential bug with no \"insertAfter\" element yet present, maybe add while-sleep hack?\n  * @todo fix hardcoded height value, move styles to classes\n  */\n  modView.prototype.showOrderAdd = function(order, position, isNewItem) {\n    var $placeholder = $('<div class=\"orl-list-item js-orl-list-item is-placeholder\"></div>');\n    $placeholder.css({'overflow':'hidden','height':'1px'});\n\n    if (position === 0) {\n      $placeholder = $placeholder.insertBefore(this.$orderListContainer.find('.js-orl-list-item').first());\n    } else {\n      $placeholder = $placeholder.insertAfter(this.$orderListContainer.find('.js-orl-list-item').eq(position - 1));\n    }\n\n    var $el = $(Mustache.render(this.mds.tpl.orderListItem, this.mapOrderInfo(order)));\n    var elHeight = 73;//this.$orderListContainer.find('.oneRequest').first().height();\n\n    var addClasses = (isNewItem) ? 'orderAdded' : '';\n\n    $placeholder\n      .html($el.html())\n      .attr('data-id', order.orderId)\n      .removeClass('is-placeholder')\n      .addClass(addClasses)\n      .animate({'height': elHeight + 'px'}, 1000, 'swing', function() {\n        var $el = $(this);\n\n        $el.css({'outline':'2px solid #56db3b','overflow':'visible'})\n          .animate({\n            boxShadow: '0 0 20px rgba(86,219,59,0.7),0 0 10px rgba(86,219,59,0.7),0 0 5px rgba(86,219,59,0.7)'\n          }, 1000, 'overBounce');\n          \n        setTimeout(function() {\n          $el.css({'outline':'0px solid #fde93e'})\n            .animate({\n              boxShadow:'0 0 0px rgba(86,219,59,0.7),0 0 0px rgba(86,219,59,0.7)'\n            }, 100, 'linear');\n        }, 5000);\n    });\n  };\n\n  /**\n  * Перемещение элемента списка\n  * @param {Object} order - новые данные заявки\n  * @param {Number} position - позиция для вставки\n  * @param {Boolean} hasOrderChanged - флаг изменения данных заявки\n  * @param {Boolean} hasStatusChanged - флаг изменения статуса заявки\n  *\n  * @todo fix hardcoded height value\n  */\n  modView.prototype.showOrderMove = function(order, position, hasOrderChanged, hasStatusChanged) {\n    var _instance = this;\n\n    console.log('перемещение: ' + position);\n    console.log(this.$orderListContainer.find('.js-orl-list-item').first());\n\n    var $placeholder = $('<div class=\"orl-list-item js-orl-list-item is-placeholder\"></div>');\n    $placeholder.css({'overflow':'hidden','height':'1px'});\n\n    if (position === 0) {\n      $placeholder = $placeholder.insertBefore(this.$orderListContainer.find('.js-orl-list-item').first());\n    } else {\n      $placeholder = $placeholder.insertAfter(this.$orderListContainer.find('.js-orl-list-item').eq(position - 1));\n    }\n\n    _instance.$orderListContainer.find('.js-orl-list-item')\n      .filter('[data-id=\"' + order.orderId + '\"]')\n        .animate({'height':'1px'},300,'swing',function() {\n          var $el = $(this).detach();\n\n          if (hasOrderChanged) {\n            $el = $(Mustache.render(_instance.mds.tpl.orderListItem, _instance.mapOrderInfo(order)));\n          }\n\n          var addClasses = (hasOrderChanged) ? 'orderChanged' : '';\n          var elHeight = 73;//_instance.$orderListContainer.find('.oneRequest').first().height();\n\n          $placeholder\n            .html($el.html())\n            .attr('data-id', order.orderId)\n            .removeClass('is-placeholder')\n            .addClass(addClasses)\n            .animate({'height': elHeight + 'px'}, 1000, 'swing', function() {\n              $el = $(this);\n              var $icon = $el.find('.js-orl-list-item--status-icon');\n\n              if (hasOrderChanged !== 0) {\n                $el.css({'outline':'2px solid #fde93e'})\n                  .animate({\n                    boxShadow: '0 0 20px rgba(253,233,62,0.7),0 0 10px rgba(253,233,62,0.7),0 0 5px rgba(253,233,62,0.7)'\n                  }, 500, 'easeOutBounce');\n\n                if (hasStatusChanged === 2) {\n                  $icon.parent().find('.js-orl-list-item--status-bg')\n                    .pulse({'opacity': '1'}, {duration: 700, pulses: 4});\n                }\n              }\n\n              $el.css({'overflow':'visible'});\n\n              setTimeout(function() {\n                $el\n                  .css({'outline':'0px solid #fde93e'})\n                  .animate({\n                    boxShadow: '0 0 0px rgba(253,233,62,0.7),0 0 0px rgba(253,233,62,0.7)'\n                  }, 100, 'linear');\n              }, 5000);\n            });\n       });\n  };\n\n  /**\n  * [draft] Управление прелоадером\n  * @todo rework as common component\n  */\n  modView.prototype.initPreLoader = function() {\n    this.$spinner = this.$spinner.appendTo(this.$orderListContainer);\n    return this;\n  };\n  modView.prototype.stopPreLoader = function() {\n    this.$spinner = this.$spinner.detach();\n    return this;\n  };\n\n  /**\n  * [draft] Управление кнопкой Moar!\n  */\n  modView.prototype.disableMoar = function() {\n    this.$showMore.prop('disabled',true);\n  };\n  modView.prototype.enableMoar = function() {\n    this.$showMore.prop('disabled',false);\n  };\n\n  /**\n  * Подготовка массива данных для шаблона заявки в списке\n  * @param {Object} item - Объект с исходной информацией о заявке\n  */\n  modView.prototype.mapOrderInfo = function(item) {\n    var _instance = this;\n    var localSum = 0;\n    var requestedSum = 0;\n    var orderServices = '';\n    var dateAmend;\n    var countryCode = 'unknown';\n    var presentServices = [];\n    var offline = false;\n\n    if(item.countryIataCode !== undefined && item.countryIataCode !== null) {\n      countryCode = String(item.countryIataCode).toLowerCase();\n    }\n\n    if (Array.isArray(item.services) && item.services.length > 0) {\n      var SERVICE_STATUS_DONE = 8;\n\n      item.services.forEach(function(service) {\n        if (service.dateAmend !== '0000-00-00 00:00:00' && service.dateAmend !== null) {\n          var da = moment(service.dateAmend,'YYYY-MM-DD HH:mm:ss').valueOf();\n\n          if (dateAmend === undefined) {\n            dateAmend = da;\n          } else {\n            dateAmend = (dateAmend < da) ? dateAmend : da;\n          }\n        }\n\n        var servId = parseInt(service.serviceType);\n\n        if (presentServices[servId] !== undefined) {\n          /*jshint -W016 : bitwise operator */\n          presentServices[servId].allServicesDone &= (service.status === SERVICE_STATUS_DONE);\n          /*jshint +W016*/\n          presentServices[servId].servicesList += '<br>' + service.serviceName;\n        } else {\n          presentServices[servId] = {\n            'allServicesDone': (service.status === SERVICE_STATUS_DONE),\n            'servicesList': KT.getCatalogInfo('servicetypes', servId, 'title') + '<br>' + service.serviceName,\n            'serviceIcon': KT.getCatalogInfo('servicetypes', servId, 'icon').replace('\"',\"'\")\n          };\n        }\n\n        if (service.offline === true) { offline = true; }\n\n        switch (KT.profile.userType) {\n          case 'op':\n            switch (KT.profile.prices) {\n              case 'net':\n                localSum += Number(service.localNetSum);\n                requestedSum += Number(service.requestedNetSum);\n                break;\n              case 'gross':\n                localSum += Number(service.localSum);\n                requestedSum += Number(service.requestedSum);\n                break;\n            }\n            break;\n          case 'agent':\n            switch (KT.profile.prices) {\n              case 'net':\n                localSum += Number(service.localSum) - Number(service.localCommission);\n                requestedSum += Number(service.requestedSum) - Number(service.requestedCommission);\n                break;\n              case 'gross':\n                localSum += Number(service.localSum);\n                requestedSum += Number(service.requestedSum);\n                break;\n            }\n            break;\n        }\n      });\n\n      presentServices.forEach(function(service) {\n        orderServices += Mustache.render(_instance.mds.tpl.orderListItemServices, service);\n      });\n    }\n\n    var kmpManagerName = item.managerKMPLastName + ' ' +\n    ((item.managerKMPFirstName !== '') ? item.managerKMPFirstName.substr(0,1) + '. ' : '') +\n    ((item.managerKMPMiddleName !== '') ? item.managerKMPMiddleName.substr(0,1) + '.' : '');\n\n    var clientManagerName = item.mgrLastName + ' ' +\n    ((item.mgrFirstName !== '') ? item.mgrFirstName.substr(0,1) + '. ' : '') +\n    ((item.mgrMiddleName !== '') ? item.mgrMiddleName.substr(0,1) + '.' : '');\n\n    var creatorName = item.creatorLastName + ' ' +\n    ((item.creatorFirstName !== '') ? item.creatorFirstName.substr(0,1) + '. ' : '') +\n    ((item.creatorMiddleName !== '') ? item.creatorMiddleName.substr(0,1) + '.' : '');\n\n    var touristName = ((item.touristLastName !== null) ? item.touristLastName : '') +\n    ' ' + ((item.touristFirstName !== null) ? item.touristFirstName : '');\n\n    var ostatus = parseInt(item.status);\n    var order = {\n      'isArchived': item.archive,\n      'orderId': item.orderId,\n      'dolc': moment(item.dolc, 'YYYY-MM-DD HH:mm:ss').format(KT.config.datetimeFormat),\n      'dateAmend': (KT.profile.userType === 'op' || dateAmend === undefined) ? false : \n        moment(dateAmend).format(KT.config.datetimeOutFormat),\n      'orderStatusIcon': KT.getCatalogInfo('orderstatuses',ostatus,'icon'),\n      'orderStatusText': KT.getCatalogInfo('orderstatuses',ostatus,'title'),\n      'touristName': htmlDecode(touristName),\n      'touristCount': (item.touristsCount > 1) ? '+ '+(item.touristsCount-1) : '',\n      'startDate': (item.startdate !== null) ? moment(item.startdate,'YYYY-MM-DD HH:mm:ss').format('DD.MM') : '*',\n      'endDate': (item.enddate !== null) ? moment(item.enddate,'YYYY-MM-DD HH:mm:ss').format('DD.MM') : '*',\n      'country': item.country,\n      'countryCode': countryCode,\n      'orderServices': orderServices,\n      'localSum': localSum.toMoney(0,',',' '),\n      'requestedSum': requestedSum.toMoney(0,',',' '),\n      'requestedCurrency': KT.getCatalogInfo('lcurrency',KT.profile.viewCurrency,'icon'),\n      'KmpManagerName': htmlDecode(kmpManagerName),\n      'clientCompany': (KT.profile.userType !== 'op') ? null :\n        item.agentCompany,\n      'creator': htmlDecode(creatorName),\n      'vip': item.vip,\n      'offline': offline\n    };\n\n    switch (KT.profile.userType) {\n      case 'op':\n        if (ostatus === 1) {\n          order.orderStatusText = 'Ручной режим';\n          order.manualMode = true;\n        }\n      break;\n    }\n\n    return order;\n  };\n\n  /**\n  * Возвращает сообщение диалога создания новой заявки \n  * @param {Array} actions - действия, доступные из модального окна (структура buttons)\n  */\n  modView.prototype.renderCreateOrderModal = function(actions) {\n    var modal = KT.Modal.notify({\n        type: 'info',\n        title: 'Создание заявки',\n        msg: Mustache.render(this.mds.tpl.createOrderModal, {}),\n        buttons: actions\n      });\n    \n    var $company = modal.$container.find('.js-modal-create-order--company');\n    var $contract = modal.$container.find('.js-modal-create-order--contract');\n\n    $company\n      .selectize({\n        plugins: {\n          'key_down': { start: 2 },\n          'jirafize': { completely: true }\n        },\n        openOnFocus: true,\n        create: false,\n        selectOnTab: true,\n        highlight: false,\n        loadThrottle: 300,\n        valueField: 'companyId',\n        labelField: 'name',\n        sortField:'seqid',\n        options:[],\n        score:function() {\n          return function(item) {\n            return 1000 / (item.seqid);\n          };\n        },\n        render: {\n          item: function(item) {\n            return '<div class=\"modal-create-order-company-select__control-item\">'+item.name+'</div>';\n          },\n          option: function(item) {\n            return '<div class=\"modal-create-order-company-select__control-option\">'+item.name+'</div>';\n          }\n        },\n        load: function(query, callback) {\n          var self = this;\n\n          this.clearOptions();\n\n          if (!query.length || query.length < 2) {\n            return callback();\n          }\n\n          KT.Dictionary.getAsList('companies', {\n              'textFilter': query,\n              'fieldsFilter': [],\n              'lang': 'ru'\n            })\n            .done(function(companies) {\n              var $inputElem = self.$control;\n\n              companies.forEach(function(item, i) {\n                item.seqid = i + 1;\n              });\n              callback(companies);\n\n              if (companies.length === 0) {\n                $inputElem.addClass('warning');\n                setTimeout(function() {\n                  $inputElem.removeClass('warning');\n                }, 2000);\n              }\n            })\n            .fail(function() {\n              callback();\n              self.refreshOptions(true);\n              var $inputElem = self.$control;\n              $inputElem.addClass('warning');\n              setTimeout(function() {\n                $inputElem.removeClass('warning');\n              }, 2000);\n            });\n        },\n        onType:function(str) {\n          if (str.length < 2) {\n            this.close();\n            this.clearOptions();\n          }\n        },\n        onItemAdd:function(value) {\n          var contractControl = $contract[0].selectize;\n\n          var contracts = this.options[value].Contracts.map(function(contract) {\n            return {\n              'ContractID': contract['ContractID'],\n              'ContractID_UTK': contract['ContractID_UTK'],\n              'ContractDate': (contract['ContractDate'] === null) ? null :\n                moment(contract['ContractDate'], 'YYYY-MM-DD').format('DD.MM.YYYY'),\n              'ContractExpiry': (contract['ContractExpiry'] === null) ? 'бессрочный' :\n                ('до ' + moment(contract['ContractExpiry'], 'YYYY-MM-DD').format('DD.MM.YYYY')),\n              'expired': contract['expired'],\n            };\n          });\n\n          contractControl.clearOptions();\n          contractControl.addOption(contracts);\n          contractControl.addItem(contracts[0].ContractID);\n          contractControl.enable();\n        },\n        onItemRemove: function() {\n          this.clearOptions();\n\n          var contractControl = $contract[0].selectize;\n          contractControl.clear();\n          contractControl.clearOptions();\n          contractControl.disable();\n        },\n        onChange: function(val) {\n          if (val === '') {\n            this.trigger('item_remove');\n          }\n        }\n      });\n    \n    $contract\n      .selectize({\n        plugins:{'key_down':{},'on_blur':{}},\n        openOnFocus: true,\n        create: false,\n        selectOnTab: true,\n        highlight: false,\n        valueField: 'ContractID',\n        labelField: 'ContractID_UTK',\n        options:[],\n        render: {\n          item: function(item) {\n            return '<div class=\"modal-create-order-company-select__control-item ' +\n              ((item.expired) ? 'modal-create-order-company-select--expired' : '') + '\">' +\n              item.ContractID_UTK + ' (' + item.ContractExpiry + ')</div>';\n          },\n          option: function(item) {\n            return '<div class=\"modal-create-order-company-select__control-option ' +\n              ((item.expired) ? 'modal-create-order-company-select--expired' : '') + '\">' +\n              item.ContractID_UTK + ' (' + item.ContractExpiry + ')</div>';\n          }\n        }\n      });\n\n    modal.$content.data('$company', $company);\n    modal.$content.data('$contract', $contract);\n  };\n\n  return modView;\n}));\n","(function(global,factory){\n\n    KT.crates.OrderList.controller = factory(KT.crates.OrderList);\n\n}(this,function(crate) {\n  /**\n  * Список заявок: контроллер\n  * @constructor\n  * @param {Object} module - ссылка на модуль\n  */\n  var olController = function(module) {\n    /** Module storage - модуль со всеми его компонентами */\n    this.mds = module;\n\n    this.mds.view = new crate.view(this.mds);\n    this.mds.OrderListStorage = new KT.storage.OrderListStorage();\n\n    this.sortOptions = {\n      'lastChangeDate': ['desc','по дате изменения'],\n      'dateStart': ['asc','по дате заезда'],\n      'touristName': ['asc','по туристу'],\n      'agentCompany': ['asc','по агентству'],\n      'countryName': ['asc','по стране'],\n      'offline': ['asc','по типу'], //online - offline\n      'status': ['asc','по статусу']\n    };\n  };\n\n  olController.prototype.init = function() {\n    var _instance = this;\n    var modView = this.mds.view;\n    var OrderListStorage = this.mds.OrderListStorage;\n\n    var beaconId = null;\n\n    var regenerateOrdersStorage = function(requestParams) {\n      if (beaconId !== null) {\n        clearTimeout(beaconId);\n        beaconId = null;\n      }\n      \n      KT.apiClient.getOrderList(requestParams)\n        .then(function(response) {\n          if (response.status === 0) {\n            OrderListStorage.setTotalOrdersAmount(response.body.nums);\n            OrderListStorage.setOrders(response.body.orders);\n          } else {\n            KT.notify('getOrderListFailed');\n          }\n        });\n    };\n\n    /**\n    * Обработка изменения валюты просмотра\n    */\n    KT.on('KT.changedViewCurrency', function() {\n      modView.clearOrderList();\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n      regenerateOrdersStorage(requestParams);\n    });\n\n    /** Обработка изменения значения переключателя нетто/брутто */\n    KT.on('KT.changedViewPrice', function() {\n      modView.clearOrderList();\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n      regenerateOrdersStorage(requestParams);\n    });\n\n    /*=============================================\n    * Обработчики событий модели\n    **=============================================*/\n    /** Обработка установки списка заявок */\n    KT.on('OrderListStorage.setOrders', function(e, ordersContainer) {\n      modView.stopPreLoader();\n\n      modView.updateSearchFormSuggest(OrderListStorage.aggregateOrderData);\n      modView.renderOrderList(ordersContainer.orders);\n\n      if (OrderListStorage.totalOrdersAmount > OrderListStorage.orders.length) {\n        modView.enableMoar();\n      } else {\n        modView.disableMoar();\n      }\n      \n      var requestTimeout = 10000;\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n\n      var pollOrderList = function() {\n        var currentBeacon = beaconId;\n\n        KT.apiClient.getOrderList(requestParams)\n          .then(function(response) {\n            if (response.status === 0) {\n              OrderListStorage.setTotalOrdersAmount(response.body.nums);\n              OrderListStorage.updateOrders(response.body.orders);\n            }\n\n            if (beaconId === currentBeacon) {\n              beaconId = setTimeout(pollOrderList, requestTimeout);\n            }\n          }, function(err) {\n            if (err.error !== 'denied' && beaconId === currentBeacon) {\n              beaconId = setTimeout(pollOrderList, requestTimeout);\n            }\n          });\n      };\n\n      beaconId = setTimeout(pollOrderList, 10000);\n    });\n\n    /** Обработка обновления числа найденных заявок */\n    KT.on('OrderListStorage.changedTotalOrdersAmount', function(e, amount) {\n      modView.SearchForm.renderOrdersAmount(amount);\n    });\n\n    /** Обработка обновления списка заявко */\n    KT.on('OrderListStorage.ordersUpdated', function() {\n      if (OrderListStorage.totalOrdersAmount >= OrderListStorage.orders.length) {\n        modView.enableMoar();\n      } else {\n        modView.disableMoar();\n      }\n    });\n\n\n    /** Обработка изменения заявки на сервере */\n    KT.on('OrderListStorage.orderChanged', function(e, order, hasStatusChanged) {\n      modView.showOrderChanges(order, hasStatusChanged);\n    });\n\n    /** Обработка удаления заявки на сервере */\n    KT.on('OrderListStorage.orderRemoved', function(e, orderId) {\n      modView.showOrderRemoval(orderId);\n    });\n\n    /** Обработка добавления заявки на сервере */\n    KT.on('OrderListStorage.orderAdded', function(e, order, position, isNewOrder) {\n      modView.showOrderAdd(order, position, isNewOrder);\n    });\n\n    /** Обработка перемещения заявки по списку */\n    KT.on('OrderListStorage.orderReordered', function(e, order, position, hasOrderChanged, hasStatusChanged) {\n      modView.showOrderMove(order, position, hasOrderChanged, hasStatusChanged);\n    });\n\n    /*===============================================\n    * Обработчики событий представления\n    **===============================================*/\n    \n    /** Обработка нажатия на кнопку создания заявки */\n    modView.$createOrder.on('click', function() {\n      console.log('add new order');\n      if (KT.profile.userType === 'op') {\n        modView.renderCreateOrderModal([{\n          type:'common',\n          title:'создать заявку',\n          callback: function($modal) {\n            var $contract = $modal.data('$contract');\n            var $company = $modal.data('$company');\n            window.sessionStorage.setItem('clientId', $company.val());\n            window.sessionStorage.setItem('contractId', $contract.val());\n            window.location.assign('/cabinetUI/orders/order/new');\n          }\n        },\n        {\n          type:'common',\n          title:'отмена',\n          callback: function() {\n            KT.Modal.closeModal();\n          }\n        }]);\n\n      } else {\n        window.location.assign('/cabinetUI/orders/order/new');\n      }\n    });\n\n    /** Обработка нажатия на метки в строке фильтра */\n    modView.SearchForm.elem.$inputField.on('click', '.js-orl-filter--control-label', function(e) {\n      e.stopPropagation();\n\n      var controlKey = $(this).attr('data-key');\n      var isApplied = $(this).hasClass('is-applied');\n      var control = modView.SearchForm.getControlByKey(controlKey);\n\n      control.clear();\n\n      if (isApplied) {\n        OrderListStorage.setFilterOption(control.key, control.getValue());\n        modView.clearOrderList();\n\n        var requestParams = OrderListStorage.getRequestParams();\n        requestParams.offset = 0;\n\n        regenerateOrdersStorage(requestParams);\n      }\n    });\n\n    /** Обработка подтверждения формы поиска (нажатие кнопки \"Найти\") */\n    modView.$searchForm.on('click', '.js-orl-filter--action-find', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      var filterOptions = modView.SearchForm.getFilterValues();\n      OrderListStorage.setFilterOptions(filterOptions);\n      \n      modView.SearchForm.markLabelsApplied();\n      modView.SearchForm.toggleForm('hide');\n      modView.clearOrderList();\n\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n\n      regenerateOrdersStorage(requestParams);\n    });\n\n    /** Обработка выбора типа сортировки */\n    modView.$sortForm.on('change', 'input[name=\"orderField\"]', function() {\n      var sortField = $(this).val();\n      var $control = $(this).closest('label');\n      var sortDir = $(this).closest('label').hasClass('sort-desc') ? 'asc' : 'desc';\n\n      if ($control.hasClass('sort-desc')) { sortDir = 'asc'; }\n      else if ($control.hasClass('sort-asc')) { sortDir = 'desc'; }\n      else {sortDir = _instance.sortOptions[sortField][0];}\n\n      OrderListStorage\n        .setFilterOption('sortDir', sortDir)\n        .setFilterOption('sortBy', new Array(sortField));\n\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n\n      modView.clearOrderList();\n      modView.SearchForm.setSortOption(sortField, requestParams.sortDir);\n            \n      regenerateOrdersStorage(requestParams);\n    });\n\n    /** Обработка нажатия кнопки очистки фильтра */\n    modView.$searchForm.on('click', '.js-orl-filter--action-reset', function(e) {\n      e.preventDefault();\n\n      modView.SearchForm.clearControls();\n      OrderListStorage.setDefaultRequestParams();\n\n      modView.SearchForm.toggleForm('hide');\n      modView.clearOrderList();\n\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = 0;\n\n      regenerateOrdersStorage(requestParams);\n    });\n\n    /** Обработка нажатия кнопки \"Еще\" (получение следующей порции заявок) */\n    modView.$showMore.on('click',function() {\n      modView.disableMoar();\n      modView.initPreLoader();\n\n      var requestParams = OrderListStorage.getRequestParams();\n      requestParams.offset = OrderListStorage.orders.length;\n      requestParams.limit = OrderListStorage.listPaging;\n\n      if (beaconId !== null) {\n        clearTimeout(beaconId);\n        beaconId = null;\n      }\n\n      /** @todo внимание! здесь, в отличие от setOrders, вызывается добавление заявок */\n      KT.apiClient.getOrderList(requestParams)\n        .then(function(response) {\n          if (response.status === 0) {\n            OrderListStorage.setTotalOrdersAmount(response.body.nums);\n            OrderListStorage.appendOrders(response.body.orders);\n          } else {\n            KT.notify('getOrderListFailed');\n          }\n        });\n    });\n  };\n\n  /** @todo move prerequisites load here */\n  olController.prototype.load = function() {\n    var _instance = this;\n    var modView = this.mds.view;\n    var OrderListStorage = this.mds.OrderListStorage;\n\n    /** Загрузка шаблонов */\n    KT.getTemplates(modView.config.templateUrl, modView.config.templates)\n      .done(function(templates) {\n        _instance.mds.tpl = templates;\n        \n        var requestParams = OrderListStorage.getRequestParams();\n        requestParams.offset = 0;\n\n        modView.SearchForm.render(requestParams, _instance.sortOptions);\n\n        /*\n        modView\n          .renderSearchForm(requestParams)\n          .renderSortForm(requestParams, _instance.sortOptions);\n          */\n\n        KT.apiClient.getOrderList(requestParams)\n          .then(function(response) {\n            if (response.status === 0) {\n              OrderListStorage.setTotalOrdersAmount(response.body.nums);\n              OrderListStorage.setOrders(response.body.orders);\n            } else {\n              KT.notify('getOrderListFailed');\n            }\n          });\n      });\n  };\n\n  return olController;\n}));\n\n(function() {\n  KT.on('KT.initializedCore', function() {\n    KT.mdx.OrderList.controller = new KT.crates.OrderList.controller(KT.mdx.OrderList);\n    KT.mdx.OrderList.controller.init();\n    KT.mdx.OrderList.controller.load();\n  });\n}());\n"]}